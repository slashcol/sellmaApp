{"version":3,"sources":["webpack:///./src/app/addcustomer/addcustomer.module.ts","webpack:///./src/app/addcustomer/addcustomer.page.html","webpack:///./src/app/addcustomer/addcustomer.page.scss","webpack:///./src/app/addcustomer/addcustomer.page.ts"],"names":[],"mappings":"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","file":"addcustomer-addcustomer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddcustomerPage } from './addcustomer.page';\nimport { PipesModule } from '../pipes/pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddcustomerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    PipesModule\n  ],\n  declarations: [AddcustomerPage]\n})\nexport class AddcustomerPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"dark\\\" >\\n      <ion-title color=\\\"tertiary\\\" > {{ username }}, Agrega Un Amigo</ion-title>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button text=\\\"Volver\\\" icon=\\\"return-left\\\" color=\\\"tertiary\\\" fill=\\\"outline\\\"></ion-back-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n    <ion-item>\\n      <ion-label color=\\\"primary\\\" position=\\\"floating\\\"> Nombre Contacto </ion-label>\\n      <ion-input type=\\\"text\\\" [(ngModel)]=\\\"name_customer\\\"></ion-input>\\n    </ion-item>\\n  \\n    <ion-item>\\n      <ion-label color=\\\"primary\\\" position=\\\"floating\\\"> Identificacion Contacto </ion-label>\\n      <ion-textarea [(ngModel)]=\\\"contact_customer\\\"></ion-textarea>\\n    </ion-item>\\n   \\n  \\n    <ion-button expand=\\\"block\\\" padding color=\\\"tertiary\\\" *ngIf=\\\"!id\\\" (click)=\\\"createdProses()\\\" fill=\\\"outline\\\">Crear</ion-button>\\n    <ion-button expand=\\\"block\\\" padding color=\\\"tertiary\\\" *ngIf=\\\"id>=1\\\" (click)=\\\"updateProses()\\\" fill=\\\"outline\\\">Enviar</ion-button>\\n  \\n  </ion-content>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZGN1c3RvbWVyL2FkZGN1c3RvbWVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PostProvider } from '../../providers/post-provider';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { async } from 'q';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'app-addcustomer',\n  templateUrl: './addcustomer.page.html',\n  styleUrls: ['./addcustomer.page.scss'],\n})\nexport class AddcustomerPage implements OnInit {\n\n  customers: any = [];\n  limit: number = 10;\n  start: number = 0;\n  \n  username: string;\n  user_id: any;\n  anggota: any;\n\n  name_customer: string = '';\n  desc_customer: string = '';\n  contact_customer: string = '';\n  phone_customer: string = '' ;\n  id: number;\n\n  constructor(\n    private postPvdr: PostProvider,\n    private router: Router,\n    public toastController: ToastController,\n    private actRoute: ActivatedRoute,\n    private storage: Storage,\n  ) { }\n\n  ngOnInit() {\n   \n  }\n  ionViewWillEnter() {\n    this.customers = [];\n    this.start = 0;\n    this.loadCustomer();\n    this.storage.get('session_storage').then((res) => {\n      this.anggota = res;\n             this.user_id = this.anggota.user_id;\n      this.username = this.anggota.username;\n    });\n  }\n\n  loadCustomer() {\n    return new Promise(resolve => {\n      let body = {\n        aksi: 'getdata',\n        limit : this.limit,\n        start : this.start,\n      };\n\n      this.postPvdr.postData(body, 'file_aksi.php').subscribe(data => {\n        for (let customer of data.result) {\n          this.customers.push(customer);\n        }\n        resolve(true);\n      });\n    });\n  }\n\n  async createdProses() {\n    if (this.name_customer == '') {\n      const toast = await this.toastController.create({\n        message: 'Customer name is required',\n        duration: 2000\n      });\n      toast.present();\n   \n    } else {\n      let body = {\n        aksi: 'add',\n        name_customer : this.name_customer,\n        desc_customer : this.desc_customer,\n        contact_customer : this.contact_customer,\n        \n        login_id : this.user_id,\n        username : this.username\n      };\n      this.postPvdr.postData(body, 'file_aksi.php').subscribe( async data => {\n        var alertpesan = data.msg;\n        if (data.success) {\n          this.router.navigate(['/customer']);\n          const toast = await this.toastController.create({\n            message: 'Contacto Agregado',\n            duration: 2000\n          });\n          toast.present();\n        } else {\n          const toast = await this.toastController.create({\n            message: alertpesan,\n            duration: 2000\n          });\n        }\n      });\n    }\n  }\n\n  async updateProses() {\n    if (this.name_customer == ''){\n      const toast = await this.toastController.create({\n        message: 'Customer is required',\n        duration: 2000\n      });\n      toast.present();\n    } else if (this.desc_customer == ''){\n      const toast = await this.toastController.create({\n        message: 'Description is required',\n        duration: 2000\n      });\n      toast.present();\n    } else {\n      let body = {\n        aksi: 'update',\n        customer_id : this.id,\n        name_customer : this.name_customer,\n        desc_customer : this.desc_customer,\n        contact_customer : this.contact_customer,\n      };\n      this.postPvdr.postData(body, 'file_aksi.php').subscribe( async data => {\n        var alertpesan = data.msg;\n        if (data.success) {\n          this.router.navigate(['/customer']);\n          const toast =await this.toastController.create({\n            message: 'Data updated successful',\n            duration: 2000\n          });\n          toast.present();\n        } else {\n          const toast =await this.toastController.create({\n            message: alertpesan,\n            duration: 2000\n          });\n        }\n      });\n\n\n    }\n  }\n}\n"],"sourceRoot":""}