{"version":3,"sources":["webpack:///./src/app/transfer/transfer.module.ts","webpack:///./src/app/transfer/transfer.page.html","webpack:///./src/app/transfer/transfer.page.scss","webpack:///./src/app/transfer/transfer.page.ts"],"names":[],"mappings":"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","file":"transfer-transfer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransferPage } from './transfer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransferPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TransferPage]\n})\nexport class TransferPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"dark\\\">\\n  \\n        <ion-buttons slot=\\\"end\\\"  *ngFor=\\\"let upsaldo of upsaldos\\\" >\\n      <ion-button  slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n        Su Saldo $ {{upsaldo.saldo}}\\n        <ion-icon name=\\\"trending-up\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  \\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button text=\\\"Volver\\\" icon=\\\"return-left\\\" color=\\\"tertiary\\\" fill=\\\"outline\\\"></ion-back-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content   >\\n\\n\\n      <ion-refresher  slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n        <ion-refresher-content pullingIcon=\\\"arrow-dropdown\\\" pullingText=\\\"Pull to refresh\\\" refreshingSpinner=\\\"dots\\\"\\n          refreshingText=\\\" Estamos Trabajando... {{ username }} \\\"  >\\n        </ion-refresher-content>\\n      </ion-refresher>\\n    \\n    \\n    \\n      <ion-list *ngIf=\\\"customer\\\">\\n    <ion-card *ngFor=\\\"let customer of customers\\\">\\n      \\n      <ion-item-sliding>     \\n       <!--  <ion-item-options   side=\\\"start\\\">\\n          <ion-item-option color=\\\"danger\\\" (click)=\\\"delCustomer(customer.customer_id)\\\"></ion-item-option>\\n        </ion-item-options> -->\\n    \\n        <!-- <ion-item   *ngIf=\\\"customer.contact_customer == identificacion \\\">     -->  \\n            <ion-item >       \\n       <!--    <ion-item>\\n        <ion-avatar item-start>  <img src=\\\"assets/pic.jpeg \\\"/> </ion-avatar>\\n        </ion-item> -->\\n        <ion-icon color=\\\"tertiary\\\" name=\\\"exit\\\"></ion-icon>    \\n          <ion-label text-left  >  {{customer.monto_customer}}</ion-label>   \\n          \\n               \\n          <ion-label slot=\\\"end\\\" text-right >{{customer.created_at}}</ion-label>\\n          </ion-item>\\n    \\n        <ion-item-options side=\\\"end\\\">\\n    \\n       <!--    <ion-item-option color=\\\"secondary\\\"\\n            (click)=\\\"showCustomer(customer.customer_id,customer.name_customer,customer.desc_customer,customer.contact_customer,customer.login_id)\\\">Historial\\n          </ion-item-option> -->\\n    \\n          <ion-item-option (click)=\\\"updateAceptar(customer.customer_id,customer.name_customer,customer.desc_customer,customer.contact_customer,customer.login_id,customer.monto_customer, customer.name_destinatario)\\\">\\n            Aceptar</ion-item-option>\\n    \\n        </ion-item-options> \\n      </ion-item-sliding>\\n   \\n    </ion-card>\\n    \\n    </ion-list>\\n    \\n    \\n    \\n    <ion-list *ngIf=\\\"!customer\\\">\\n        <ion-card *ngFor=\\\"let customer of customers \\\"   >\\n          \\n          <ion-item-sliding    >     \\n            <ion-item-options   side=\\\"start\\\">\\n              <ion-item-option color=\\\"danger\\\" (click)=\\\"delCustomer(customer.customer_id)\\\">Eliminar</ion-item-option>\\n            </ion-item-options>\\n        \\n            <ion-item   *ngIf=\\\"customer.login_id == user_id\\\"  >\\n              <ion-item>\\n            <ion-avatar item-start> \\n               <ion-skeleton-text animated width=\\\"80%\\\" > </ion-skeleton-text>\\n              </ion-avatar>\\n            </ion-item>\\n              <ion-label text-left > \\n                  <ion-skeleton-text animated width=\\\"60%\\\" > </ion-skeleton-text>\\n                </ion-label>\\n              <ion-label slot=\\\"end\\\" text-right >\\n                  <ion-skeleton-text animated width=\\\"40%\\\" > </ion-skeleton-text>\\n              </ion-label>\\n              </ion-item>\\n        \\n            <ion-item-options side=\\\"end\\\">\\n        \\n              <ion-item-option color=\\\"secondary\\\"\\n                (click)=\\\"showCustomer(customer.customer_id,customer.name_customer,customer.desc_customer,customer.contact_customer,customer.login_id)\\\">Historial\\n              </ion-item-option>\\n        \\n              <ion-item-option (click)=\\\"updateCustomer(customer.customer_id,customer.name_customer,customer.desc_customer,customer.contact_customer,customer.login_id)\\\">\\n                Transferir</ion-item-option>\\n        \\n            </ion-item-options>\\n          </ion-item-sliding>\\n        \\n        </ion-card>\\n        \\n        </ion-list>\\n    \\n    \\n    \\n      <ion-infinite-scroll (ionInfinite)=\\\"loadData($event)\\\">\\n  \\n        <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Cargando Datos...\\\">\\n        </ion-infinite-scroll-content>\\n      </ion-infinite-scroll>\\n    \\n    </ion-content>\\n    \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zZmVyL3RyYW5zZmVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PostProvider } from '../../providers/post-provider';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LocalNotifications, ELocalNotificationTriggerUnit } from '@ionic-native/local-notifications/ngx';\nimport { Storage } from '@ionic/storage';\nimport { ToastController, Platform, AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.page.html',\n  styleUrls: ['./transfer.page.scss'],\n})\nexport class TransferPage implements OnInit {\n\n  customer = false;\n  scheduled = [];\n  customers: any = [];\n  upsaldos: any = [];\n  limit: number = 10;\n  start: number = 0;\n  phone_number: string;\n  username: string;\n  identificacion: any = '';\n  user_id: any;\n  saldo: string;\n  monto_customer: number;\n  login_id: any;\n  anggota: any;\n  name_destinatario: any;\n  ident_destinatario: any;\n  pendiente: any;\n\n  constructor(\n    private router: Router,\n    private postPvdr: PostProvider,\n    public toastController: ToastController,\n    private storage: Storage,\n    private plt: Platform,\n      private localNotifications: LocalNotifications,\n      private lalertCtrl: AlertController,\n    private actRoute: ActivatedRoute\n\n  ) {\n    \n    //Notificaciones\n\n    this.plt.ready().then(() => {\n      this.localNotifications.on('click').subscribe(res => {\n        console.log('click: ', res);\n        let msg = res.data ? res.data.mydata : '';\n        //this.showAlert(res.title, res.text, msg);    \n      });\n\n      this.localNotifications.on('trigger').subscribe(res => {\n        console.log('trigger: ', res);\n        let msg = res.data ? res.data.mydata : '';\n        //this.showAlert(res.title, res.text, msg);\n      });\n    });\n\n    \n    setTimeout(() => {\n      this.customer = true;\n    }, 3000);\n}\n\n  ngOnInit() {\n    this.actRoute.params.subscribe((data: any) =>{\n   this.saldo = data.saldo;\n   this.name_destinatario = data.namedest;\n   this.monto_customer = data.monto;\n   this.ident_destinatario = data.ident;\n        console.log(data);\n\n    });\n  }\n\n  ionViewWillEnter() {\n    this.customers = [];\n    this.upsaldos = [];    \n    this.start = 0;\n    this.loadCustomer(this.login_id);\n    this.loadSaldo();\n    this.storage.get('session_storage').then((res) => {\n      this.anggota = res;\n      this.login_id = this.anggota.login_id;\n      this.user_id = this.anggota.user_id;\n      //this.saldo = this.anggota.saldo;\n      this.phone_number = this.anggota.phone_number;\n      this.username = this.anggota.username;\n      this.identificacion = this.anggota.identificacion;\n      this.name_destinatario = this.anggota.name_destinatario;\n      this.ident_destinatario = this.anggota.ident_destinatario;\n      \n    });\n  }\n\n  async proseslogout() {\n    this.storage.clear();\n    this.router.navigate(['/login']);\n    const toast = await this.toastController.create({\n      message: 'Logout successful',\n      duration: 2000\n     });\n    toast.present();\n\n  }\n\n\n\n  addCustomer() {\n    this.router.navigate(['/addcustomer']);\n  }\n\n  updateAceptar(id, name, desc, contact, login, monto) {\n    this.router.navigate(['/aceptar/' + id + '/' + name + '/' + desc + '/' + contact + '/' + login  + '/' + monto]);\n  }\n\n  showCustomer(id, name, desc, contact, login, namedest, ident) {\n    this.router.navigate(['/showcustomer/' + id + '/' + name + '/' + desc + '/' + contact + '/' + login + '/'  + namedest + '/' + ident]);\n  }\n\n  doRefresh(event) {\n    setTimeout(() => {\n      this.ionViewWillEnter();\n      event.target.complete();\n    }, 1500);\n  }\n\n  loadData(event: any) {\n    this.start += this.limit;\n    setTimeout(() => {\n    this.loadCustomer(this.login_id).then(() => {\n    event.target.complete();\n    });\n    },1500);\n  }\n\n\n  delCustomer(id) {\n    let body = {\n        aksi: 'delete',\n        customer_id : id\n      };\n\n    this.postPvdr.postData(body, 'file_aksi.php').subscribe(data => {\n             this.ionViewWillEnter();\n             \n      });\n  }\n\n \n  loadCustomer(login_id) {\n  \n    return new Promise(resolve => {\n      let body = {\n        aksi: '456578980' ,        \n        limit : this.limit,\n        start : this.start,\n        user_id : this.user_id, \n        login_id : this.login_id,\n        identificacion : this.identificacion,\n        name_destinatario : this.name_destinatario,\n        ident_destinatario : this.ident_destinatario,\n        pendiente : this.pendiente\n       // saldo : this.saldo\n       \n      };\n      console.log(this.login_id);\n\n      this.postPvdr.postData(body, 'file_aksi.php').subscribe(data => {\n        if(data.result) {\n          for(let customer of data.result) {\n           this.customers.push(customer)\n           if(this.pendiente){\n            this.scheduleNotification();\n            console.log('nada para para mostrar');\n           }else {\n           console.log('hay algo para mostrar para mostrar');\n           console.log(this.monto_customer);\n           this.scheduleNotification()\n          }\n          \n           \n        }\n        }\n      \n        resolve(true);\n      });\n     \n    });\n  }\n \n\n  loadSaldo() {\n  \n    return new Promise(resolve => {\n      let body = {\n        aksi: 'getdata3',            \n        saldo : this.saldo,\n        user_id :this.user_id\n       \n      };\n      console.log(this.login_id);\n\n      this.postPvdr.postData(body, 'file_aksi.php').subscribe(data => {\n        if(data.result) {\n          for(let upsaldo of data.result) {\n           this.upsaldos.push(upsaldo)\n          \n           \n        }\n        }\n        console.log(this.saldo);\n        resolve(true);\n      });\n     \n    });\n  }\n\n  async UpinProces(){\n\n    this.saldo = this.saldo + this.monto_customer;\n\n    let body = {\n    \n      aksi: 'update_transfer',\n      \n      monto_customer : this.monto_customer,\n     saldo : this.saldo,\n      login_id : this.login_id,\n                \n    };\n\n    this.postPvdr.postData(body, 'file_aksi.php').subscribe( async data => {\n      var alertpesan = data.msg;          \n      if (data.success) {        \n        //this.proseslogout()\n         //this.router.navigate(['/customer']);\n        const toast = await this.toastController.create({\n          message: 'Por Tu Seguridad debes Iniciar de Nuevo ',\n          duration: 2000\n     \n        });     \n        \n        //console.log(this.contact_customer);\n        toast.present();\n      } else {\n        const toast = await this.toastController.create({\n          message: alertpesan,\n          duration: 2000\n        });  \n            }\n    \n      \n    });\n\n  }\n  /*\n  showAlert(header, sub, msg){\n    this.lalertCtrl.create({\n      header: header,\n      subHeader: sub,\n      message: msg,\n      buttons: ['OK']\n  \n    }).then(alert => alert.present());     \n      }\n*/\n      scheduleNotification(){\n        this.localNotifications.schedule({\n          id: 1,\n          title: 'HOLA '+ this.username,\n          text:  'Recibiste una transferencia', \n          sound: 'assets/sonidos/recibir.mp3' , \n          data: { mydata: 'si en este momento es SEGURO revisa porfavor' },\n          trigger: { in: 1, unit: ELocalNotificationTriggerUnit.SECOND },\n          //foreground: true\n        });\n    \n      }\n \n\n  \n}\n"],"sourceRoot":""}