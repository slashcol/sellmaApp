{"version":3,"sources":["webpack:///./src/app/updatecustomer/updatecustomer.module.ts","webpack:///./src/app/updatecustomer/updatecustomer.page.html","webpack:///./src/app/updatecustomer/updatecustomer.page.scss","webpack:///./src/app/updatecustomer/updatecustomer.page.ts"],"names":[],"mappings":"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","file":"updatecustomer-updatecustomer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdatecustomerPage } from './updatecustomer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdatecustomerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UpdatecustomerPage]\n})\nexport class UpdatecustomerPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n\\n      <ion-buttons slot=\\\"end\\\"  >\\n    <ion-button  slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n  {{nombre}}\\n      <ion-icon name=\\\"trending-up\\\"></ion-icon>\\n    </ion-button>\\n  </ion-buttons>\\n\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"Volver\\\" icon=\\\"return-left\\\" color=\\\"tertiary\\\" fill=\\\"outline\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content pullingIcon=\\\"arrow-dropdown\\\" pullingText=\\\"Desliza hacia abajo para Actualizar\\\" refreshingSpinner=\\\"dots\\\"\\n      refreshingText=\\\" Estamos Trabajando... {{ username }} \\\"  >\\n    </ion-refresher-content>\\n  </ion-refresher>\\n \\n  <!--\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\"> nombre </ion-label>\\n    <ion-input type=\\\"label\\\" [(ngModel)]=\\\"name_customer\\\"></ion-input>\\n  </ion-item>\\n-->\\n<!-- \\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\"> Describe tu Transferencia </ion-label>\\n    <ion-textarea color=\\\"medium\\\" [(ngModel)]=\\\"saldo\\\">  </ion-textarea>\\n\\n -->\\n\\n  <ion-item  >\\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\"> Monto </ion-label>\\n    <ion-input type=\\\"number\\\"  [(ngModel)]=\\\"abono\\\"> </ion-input>\\n  </ion-item>\\n\\n \\n\\n  <ion-content padding >\\n      <ion-button  expand=\\\"block\\\" color=\\\"tertiary\\\"  (click)=\\\"updateProses()\\\" fill=\\\"outline\\\">\\n        Abonar $ {{ abono }} a {{ nombre }}\\n        <ion-icon slot=\\\"end\\\" name=\\\"paper-plane\\\"></ion-icon>\\n      </ion-button>\\n      <br>\\n      <br>\\n\\n      Saldo Actual:\\n  <p class=\\\"data\\\" >{{ saldo }}   </p>   \\n  Abono: \\n  <p class=\\\"data\\\" >{{ abono }}   </p>  \\n \\n  <p class=\\\"data\\\" >=============  </p>  \\n  Nuevo Saldo:\\n  <p class=\\\"data\\\" >{{ saldo - abono }}   </p>    \\n\\n\\n      \\n  \\n     <!--  <ion-button expand=\\\"block\\\" color=\\\"danger\\\" *ngIf=\\\"monto_customer > upsaldo.saldo\\\" (click)=\\\"RecargaProces()\\\" fill=\\\"outline\\\">\\n         Ups... $ {{ monto_customer }} superan tus $ {{ upsaldo.saldo }} de Saldo\\n          <ion-icon slot=\\\"end\\\" name=\\\"paper-plane\\\"></ion-icon>\\n        </ion-button>\\n -->\\n  </ion-content>\\n\\n</ion-content>\\n\"","module.exports = \".body {\\n  background-color: darkslategray; }\\n\\np {\\n  text-align: center;\\n  color: #797373; }\\n\\np.data {\\n  color: #4b91e0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBkYXRlY3VzdG9tZXIvQzpcXFVzZXJzXFx1c3VhcmlvXFxEb2N1bWVudHNcXGNhcmxvc1xcaW9uaWM0bG9naW5cXGxvZ2luL3NyY1xcYXBwXFx1cGRhdGVjdXN0b21lclxcdXBkYXRlY3VzdG9tZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksK0JBQStCLEVBQUE7O0FBR25DO0VBQ0ksa0JBQWtCO0VBQ2xCLGNBQXlCLEVBQUE7O0FBRzdCO0VBRUksY0FBd0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZWN1c3RvbWVyL3VwZGF0ZWN1c3RvbWVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib2R5e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya3NsYXRlZ3JheTtcclxuICAgIFxyXG59XHJcbnB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogcmdiKDEyMSwgMTE1LCAxMTUpO1xyXG59XHJcblxyXG5wLmRhdGF7XHJcblxyXG4gICAgY29sb3I6IHJnYig3NSwgMTQ1LCAyMjQpO1xyXG5cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { PostProvider } from '../../providers/post-provider';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { FCM } from '@ionic-native/fcm/ngx';\n\n@Component({\n  selector: 'app-updatecustomer',\n  templateUrl: './updatecustomer.page.html',\n  styleUrls: ['./updatecustomer.page.scss'],\n})\nexport class UpdatecustomerPage implements OnInit {\n\n\n  customers: any = [];\n  upsaldos: any = [];\n  limit: number = 10;\n  start: number = 0;\n\n  idMeta: number;\n  user: string = '';\n  nombre: string = '';\n  direccion: string = '';\n  telefono: number;\n  identificacion: number;\n  codigo: Date;\n  valoratrasos: number;\n  atrazos: number;\n  iniciocredito: Date;\n  ultimoabono: Date;\n  valorcuota: number;\n  diadepago: string;\n  abono: number;\n  saldo: number;\n  plazo: number;\n  credito: number;\n  fest: number; \n  id : any;\n  user_id: any;\n  login_id: any;\n  anggota: any; \n  username: any;\n  token: string;\n \n\n  constructor(\n    private postPvdr: PostProvider,\n    private router: Router,\n    private fcm: FCM,\n    public toastController: ToastController,\n    private actRoute: ActivatedRoute,\n    private storage: Storage,\n  ) { }\n\n  \n\n  ngOnInit() {\n    this.actRoute.params.subscribe((data: any) => {\n      this.idMeta = data.id;     \n      this.user = data.user;\n      this.nombre = data.name;\n      this.direccion = data.direc;\n      this.telefono = data.tele;\n      this.identificacion = data.identificacion;\n      this.codigo = data.codi;\n      this.valoratrasos = data.valora;\n      this.atrazos = data.atraz;\n      this.iniciocredito = data.inicioc;\n      this.ultimoabono = data.ultimoa;\n      this.valorcuota = data.valorc;\n      this.diadepago = data.diade;\n      this.abono = data.abon;     \n      this.saldo = data.sald;\n      this.plazo = data.plazo;\n      this.credito = data.credi;\n      this.fest = data.fest;\n      this.login_id = data.login;\n      this.username = data.username;\n      this.token = data.toke;\n      console.log(data);\n      });\n    //  this.ionViewWillEnter() ;\n\n      this.fcm.getToken().then((token: string)  => {\n        // backend.registerToken(token);\n        console.log(token);\n        this.token = token;\n        \n       });\n   \n       this.fcm.onTokenRefresh().subscribe((token: string) => {\n         console.log(\"actualizacion del tokend \" + token);\n       });  \n  }\n\n \n\n  ionViewWillEnter() {\n    this.customers = [];\n    this.upsaldos = [];     \n    this.start = 0;\n    //this.loadCustomer(this.login_id);\n    //this.loadSaldo();\n    this.storage.get('session_storage').then((res) => {\n      this.anggota = res;\n     //this.login_id = this.anggota.login_id;     \n     /*  this.user = this.anggota.user;   \n      this.telefono = this.anggota.telefono; */\n      this.username = this.anggota.username;\n      this.identificacion = this.anggota.identificacion;\n    });\n  }\n\n  \n\n  async updateProses() {\n /*    if (this.name_customer == ''){\n      const toast = await this.toastController.create({\n        message: 'Customer is required',\n        duration: 2000\n      });\n      toast.present();\n    } else if (this.desc_customer == ''){\n      const toast = await this.toastController.create({\n        message: this.username +  ', Cuentale a ' + this.name_customer + ' de tu transferencia' ,\n        duration: 2000\n      });\n      toast.present();\n    } else if (this.monto_customer == null){\n      const toast = await this.toastController.create({\n        message: 'Ingresa Un Monto Valido',\n        duration: 2000\n      });\n      toast.present();\n    }  else if (this.abono == 0){\n      const toast = await this.toastController.create({\n        message: 'Ingresa Un Monto Valido',\n        duration: 2000\n      });\n      toast.present();\n      } else */ {\n        \n      let body = {   \n     \n        aksi: 'update',\n        idMeta : this.idMeta,\n        telefono: this.telefono,\n        nombre: this.nombre,\n        abono : this.abono,\n        saldo : this.saldo,\n        iniciocredito : this.iniciocredito,\n        codigo : this.codigo,\n        valorcuota : this.valorcuota,\n        plazo : this.plazo,     \n                  \n      };\n     // if ( this.saldo > this.monto_customer  ) { \n      this.postPvdr.postData(body, 'file_aksi.php').subscribe( async data => {\n        var alertpesan = data.msg;          \n        if (data.success) {\n          this.registrarAbono();\n         // this.abono = null ;\n         this.router.navigate(['/customer']);\n          const toast = await this.toastController.create({\n            message: 'Abono Exitoso',\n            duration: 2000\n       \n          });         \n          \n          console.log(this.abono);\n          toast.present();\n        } else {\n          const toast = await this.toastController.create({\n            message: alertpesan,\n            duration: 2000\n          });\n\n     \n      \n        \n        }\n      \n        \n      });\n    /*\n    }else{\n      const toast = await this.toastController.create({\n        message: 'saldo',\n        duration: 2000\n      });\n      toast.present();\n    }\n    */\n  }\n\n  \n  }\n\n  async registrarAbono() {           \n         let body = {           \n           aksi     : 'updateAbono',          \n           idMeta   : this.idMeta,\n           user     :this.user,\n           nombre   : this.nombre,\n           direccion: this.direccion,\n           telefono : this.telefono,  \n           identificacion : this.identificacion,  \n           codigo : this.codigo, \n           valoratrasos : this.valoratrasos,\n           atrazos : this.atrazos,\n           iniciocredito : this.iniciocredito,\n           ultimoabono : this.ultimoabono,\n           valorcuota : this.valorcuota,\n           diadepago : this.diadepago,\n           abono    : this.abono,\n           saldo    : this.saldo ,\n           plazo : this.plazo,\n           credito : this.credito\n\n             \n                     \n         };\n        // if ( this.saldo > this.monto_customer  ) { \n         this.postPvdr.postData(body, 'file_aksi.php').subscribe( async data => {\n           var alertpesan = data.msg;    \n           if (data.success) {         \n          \n           this.router.navigate(['/customer']);\n            const toast = await this.toastController.create({\n              message: 'Abono Exitoso',\n              duration: 2000\n         \n            });         \n            \n            console.log(this.abono);\n            toast.present();\n          } else {\n            const toast = await this.toastController.create({\n              message: alertpesan,\n              duration: 2000\n            });\n  \n       \n        \n          \n          }                        \n         });\n       /*\n       }else{\n         const toast = await this.toastController.create({\n           message: 'saldo',\n           duration: 2000\n         });\n         toast.present();\n       }\n       */\n   \n   \n     \n     }\n   \n\n//notificacion del envio\n\nasync addNoti() { \n    let body = {    \n      aksi: 'Noti0817',           \n    /*   login_id: this.login_id,    \n      monto_customer: this.monto_customer,\n         desc_customer : this.desc_customer,\n           username : this.username,\n           contact_customer: this.contact_customer,\n              // token: this.token\n                 */\n    };    \n    this.postPvdr.postData(body, 'notificaciones.php').subscribe( async data => {\n      var alertpesan = data.msg;    \n     // this.loadToken() \n    });\n  /*\n  }else{\n    const toast = await this.toastController.create({\n      message: 'saldo',\n      duration: 2000\n    });\n    toast.present();\n  }\n  */\n\n\n\n}\n\n\n\n\n\n  async proseslogout() {\n    this.storage.clear();\n    this.router.navigate(['/login']);\n    const toast = await this.toastController.create({\n      message: 'Debes Ingresar de nuevo por seguridad',\n      duration: 2000\n     });\n    toast.present();\n\n  }\n\n\n  doRefresh(event) {\n    setTimeout(() => {\n      this.ionViewWillEnter();\n      event.target.complete();\n    }, 500);\n  }\n  \n  //aqui va la funcion para usar el salgo\n\n/*   async RecargaProces(){\n    const toast = await this.toastController.create({\n      message: 'Revisa Tu Monto',\n      duration: 2000\n \n    });\n\n    this.monto_customer = null;\n    //this.router.navigate(['/customer']);\n  }\n */\n /*  async UpinProces(){  \n    let body = {    \n      aksi: '017834595',      \n      monto_customer : this.monto_customer,\n     saldo : this.saldo,  \n      login_id : this.login_id,               \n    };\n    this.postPvdr.postData(body, 'file_aksi.php').subscribe( async data => {\n      var alertpesan = data.msg;          \n      if (data.success) {        \n        //this.proseslogout()\n        // this.router.navigate(['/customer']);\n        const toast = await this.toastController.create({\n          message: 'Por Tu Seguridad debes Iniciar de Nuevo ',\n          duration: 2000\n     \n        });     \n        \n        //console.log(this.contact_customer);\n        toast.present();\n      } else {\n        const toast = await this.toastController.create({\n          message: alertpesan,\n          duration: 2000\n        });  \n            }\n    \n      \n    });\n\n  }\n */\n\n    \n /*  loadToken() {\n  \n    return new Promise(resolve => {\n      let body = {\n        aksi: 'tokenes',            \n      contact_customer: this.contact_customer,\n        user_id :this.user_id\n       \n      };\n      //console.log(this.login_id);\n\n      this.postPvdr.postData(body, 'notificaciones.php').subscribe(data => {\n        if(data.result) {\n          for(let upsaldo of data.result) {\n           this.upsaldos.push(upsaldo)\n          \n           \n        }\n        }\n        console.log(this.saldo);\n        resolve(true);\n      });\n     \n    });\n  }\n */\n  \n  loadSaldo() {\n  \n    return new Promise(resolve => {\n      let body = {\n        aksi: 'getdata3',            \n        saldo : this.saldo,\n        user_id :this.user_id\n       \n      };\n      //console.log(this.login_id);\n\n      this.postPvdr.postData(body, 'file_aksi.php').subscribe(data => {\n        if(data.result) {\n          for(let upsaldo of data.result) {\n           this.upsaldos.push(upsaldo)\n          \n           \n        }\n        }\n        console.log(this.saldo);\n        resolve(true);\n      });\n     \n    });\n  }\n\n\n}\n"],"sourceRoot":""}