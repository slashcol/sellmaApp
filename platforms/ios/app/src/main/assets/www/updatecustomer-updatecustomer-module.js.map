{"version":3,"sources":["webpack:///./src/app/updatecustomer/updatecustomer.module.ts","webpack:///./src/app/updatecustomer/updatecustomer.page.html","webpack:///./src/app/updatecustomer/updatecustomer.page.scss","webpack:///./src/app/updatecustomer/updatecustomer.page.ts"],"names":[],"mappings":"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","file":"updatecustomer-updatecustomer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdatecustomerPage } from './updatecustomer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdatecustomerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UpdatecustomerPage]\n})\nexport class UpdatecustomerPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n\\n      <ion-buttons slot=\\\"end\\\"  *ngFor=\\\"let upsaldo of upsaldos\\\" >\\n    <ion-button  slot=\\\"end\\\" color=\\\"secondary\\\" fill=\\\"outline\\\">\\n      Su Saldo $ {{upsaldo.saldo}}\\n      <ion-icon name=\\\"trending-up\\\"></ion-icon>\\n    </ion-button>\\n  </ion-buttons>\\n\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"Volver\\\" icon=\\\"return-left\\\" color=\\\"tertiary\\\" fill=\\\"outline\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content pullingIcon=\\\"arrow-dropdown\\\" pullingText=\\\"Desliza hacia abajo para Actualizar\\\" refreshingSpinner=\\\"dots\\\"\\n      refreshingText=\\\" Estamos Trabajando... {{ username }} \\\"  >\\n    </ion-refresher-content>\\n  </ion-refresher>\\n \\n  <!--\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\"> nombre </ion-label>\\n    <ion-input type=\\\"label\\\" [(ngModel)]=\\\"name_customer\\\"></ion-input>\\n  </ion-item>\\n-->\\n  <ion-item>\\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\"> Describe tu Transferencia </ion-label>\\n    <ion-textarea color=\\\"medium\\\" [(ngModel)]=\\\"desc_customer\\\">  </ion-textarea>\\n  </ion-item>\\n\\n \\n  <ion-item  >\\n    <ion-label color=\\\"primary\\\" position=\\\"floating\\\"> Monto </ion-label>\\n    <ion-input type=\\\"number\\\"  [(ngModel)]=\\\"monto_customer\\\"> </ion-input>\\n  </ion-item>\\n\\n \\n\\n  <ion-content *ngFor=\\\"let upsaldo of upsaldos\\\"  >\\n      <ion-button  expand=\\\"block\\\" color=\\\"tertiary\\\" *ngIf=\\\"upsaldo.saldo > monto_customer\\\" (click)=\\\"updateProses()\\\" fill=\\\"outline\\\">\\n        Transferir $ {{ monto_customer }} a {{ name_customer }}\\n        <ion-icon slot=\\\"end\\\" name=\\\"paper-plane\\\"></ion-icon>\\n      </ion-button>\\n  \\n      <ion-button expand=\\\"block\\\" color=\\\"danger\\\" *ngIf=\\\"monto_customer > upsaldo.saldo\\\" (click)=\\\"RecargaProces()\\\" fill=\\\"outline\\\">\\n         Ups... $ {{ monto_customer }} superan tus $ {{ upsaldo.saldo }} de Saldo\\n          <ion-icon slot=\\\"end\\\" name=\\\"paper-plane\\\"></ion-icon>\\n        </ion-button>\\n\\n  </ion-content>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZWN1c3RvbWVyL3VwZGF0ZWN1c3RvbWVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PostProvider } from '../../providers/post-provider';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { FCM } from '@ionic-native/fcm/ngx';\n\n@Component({\n  selector: 'app-updatecustomer',\n  templateUrl: './updatecustomer.page.html',\n  styleUrls: ['./updatecustomer.page.scss'],\n})\nexport class UpdatecustomerPage implements OnInit {\n\n\n  customers: any = [];\n  upsaldos: any = [];\n  limit: number = 10;\n  start: number = 0;\n    name_customer: string = '';\n  desc_customer: string = '';\n  contact_customer: string = '';\n  monto_customer: number;\n   id: number;\n  phone_number: string;\n  username: string;\n  token: string;\n  identificacion: string;\n  user_id: any;\n  saldo: number;\n  login_id: any;\n  anggota: any;\n\n  constructor(\n    private postPvdr: PostProvider,\n    private router: Router,\n    private fcm: FCM,\n    public toastController: ToastController,\n    private actRoute: ActivatedRoute,\n    private storage: Storage,\n  ) { }\n\n  \n\n  ngOnInit() {\n    this.actRoute.params.subscribe((data: any) => {\n      this.id = data.id;\n      this.name_customer = data.name;\n     this.desc_customer = data.desc;\n      this.contact_customer = data.contact;\n      this.monto_customer = data.monto;\n      this.login_id = data.login;\n      this.saldo = data.saldo;\n      this.identificacion = data.identificacion;\n      this.username = data.username;\n      this.token = data.toke;\n      console.log(data);\n      });\n      this.ionViewWillEnter() ;\n\n      this.fcm.getToken().then((token: string)  => {\n        // backend.registerToken(token);\n        console.log(token);\n        this.token = token;\n        \n       });\n   \n       this.fcm.onTokenRefresh().subscribe((token: string) => {\n         console.log(\"actualizacion del tokend \" + token);\n       });  \n  }\n\n \n\n  ionViewWillEnter() {\n    this.customers = [];\n    this.upsaldos = [];     \n    this.start = 0;\n    //this.loadCustomer(this.login_id);\n    this.loadSaldo();\n    this.storage.get('session_storage').then((res) => {\n      this.anggota = res;\n     //this.login_id = this.anggota.login_id;\n      this.user_id = this.anggota.user_id;\n      this.saldo = this.anggota.saldo;\n      this.phone_number = this.anggota.phone_number;\n      this.username = this.anggota.username;\n      this.identificacion = this.anggota.identificacion;\n    });\n  }\n\n  \n\n  async updateProses() {\n    if (this.name_customer == ''){\n      const toast = await this.toastController.create({\n        message: 'Customer is required',\n        duration: 2000\n      });\n      toast.present();\n    } else if (this.desc_customer == ''){\n      const toast = await this.toastController.create({\n        message: this.username +  ', Cuentale a ' + this.name_customer + ' de tu transferencia' ,\n        duration: 2000\n      });\n      toast.present();\n    } else if (this.monto_customer == null){\n      const toast = await this.toastController.create({\n        message: 'Ingresa Un Monto Valido',\n        duration: 2000\n      });\n      toast.present();\n    } else if (this.monto_customer == 0){\n      const toast = await this.toastController.create({\n        message: 'Ingresa Un Monto Valido',\n        duration: 2000\n      });\n      toast.present();\n      } else {\n        \n      let body = {\n    \n        aksi: 'update',\n        customer_id : this.id,\n        name_customer : this.name_customer,\n        desc_customer : this.desc_customer,\n        contact_customer : this.contact_customer,\n        monto_customer : this.monto_customer,\n        saldo : this.saldo,\n        login_id : this.login_id,\n        username : this.username,\n        identificacion : this.identificacion,\n                  \n      };\n     // if ( this.saldo > this.monto_customer  ) { \n      this.postPvdr.postData(body, 'file_aksi.php').subscribe( async data => {\n        var alertpesan = data.msg;          \n        if (data.success) {\n          this.UpinProces()\n          this.loadToken()\n          this.addNoti()\n         this.proseslogout()\n          this.monto_customer = null ;\n         // this.router.navigate(['/customer']);\n          const toast = await this.toastController.create({\n            message: 'Data updated successful',\n            duration: 2000\n       \n          });         \n          \n          //console.log(this.contact_customer);\n          toast.present();\n        } else {\n          const toast = await this.toastController.create({\n            message: alertpesan,\n            duration: 2000\n          });\n\n     \n      \n        \n        }\n      \n        \n      });\n    /*\n    }else{\n      const toast = await this.toastController.create({\n        message: 'saldo',\n        duration: 2000\n      });\n      toast.present();\n    }\n    */\n  }\n\n  \n  }\n\n//notificacion del envio\n\nasync addNoti() { \n    let body = {    \n      aksi: 'Noti0817',           \n      login_id: this.login_id,    \n      monto_customer: this.monto_customer,\n         desc_customer : this.desc_customer,\n           username : this.username,\n           contact_customer: this.contact_customer,\n              // token: this.token\n                \n    };    \n    this.postPvdr.postData(body, 'notificaciones.php').subscribe( async data => {\n      var alertpesan = data.msg;    \n      this.loadToken() \n    });\n  /*\n  }else{\n    const toast = await this.toastController.create({\n      message: 'saldo',\n      duration: 2000\n    });\n    toast.present();\n  }\n  */\n\n\n\n}\n\n\n\n\n\n  async proseslogout() {\n    this.storage.clear();\n    this.router.navigate(['/login']);\n    const toast = await this.toastController.create({\n      message: 'Debes Ingresar de nuevo por seguridad',\n      duration: 2000\n     });\n    toast.present();\n\n  }\n\n\n  doRefresh(event) {\n    setTimeout(() => {\n      this.ionViewWillEnter();\n      event.target.complete();\n    }, 500);\n  }\n  \n  //aqui va la funcion para usar el salgo\n\n  async RecargaProces(){\n    const toast = await this.toastController.create({\n      message: 'Revisa Tu Monto',\n      duration: 2000\n \n    });\n\n    this.monto_customer = null;\n    //this.router.navigate(['/customer']);\n  }\n\n  async UpinProces(){  \n    let body = {    \n      aksi: '017834595',      \n      monto_customer : this.monto_customer,\n     saldo : this.saldo,  \n      login_id : this.login_id,               \n    };\n    this.postPvdr.postData(body, 'file_aksi.php').subscribe( async data => {\n      var alertpesan = data.msg;          \n      if (data.success) {        \n        //this.proseslogout()\n        // this.router.navigate(['/customer']);\n        const toast = await this.toastController.create({\n          message: 'Por Tu Seguridad debes Iniciar de Nuevo ',\n          duration: 2000\n     \n        });     \n        \n        //console.log(this.contact_customer);\n        toast.present();\n      } else {\n        const toast = await this.toastController.create({\n          message: alertpesan,\n          duration: 2000\n        });  \n            }\n    \n      \n    });\n\n  }\n\n\n    \n  loadToken() {\n  \n    return new Promise(resolve => {\n      let body = {\n        aksi: 'tokenes',            \n      contact_customer: this.contact_customer,\n        user_id :this.user_id\n       \n      };\n      //console.log(this.login_id);\n\n      this.postPvdr.postData(body, 'notificaciones.php').subscribe(data => {\n        if(data.result) {\n          for(let upsaldo of data.result) {\n           this.upsaldos.push(upsaldo)\n          \n           \n        }\n        }\n        console.log(this.saldo);\n        resolve(true);\n      });\n     \n    });\n  }\n\n  \n  loadSaldo() {\n  \n    return new Promise(resolve => {\n      let body = {\n        aksi: 'getdata3',            \n        saldo : this.saldo,\n        user_id :this.user_id\n       \n      };\n      //console.log(this.login_id);\n\n      this.postPvdr.postData(body, 'file_aksi.php').subscribe(data => {\n        if(data.result) {\n          for(let upsaldo of data.result) {\n           this.upsaldos.push(upsaldo)\n          \n           \n        }\n        }\n        console.log(this.saldo);\n        resolve(true);\n      });\n     \n    });\n  }\n\n\n}\n"],"sourceRoot":""}